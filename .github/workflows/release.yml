name: Create Release and build wheels

on:
  push:
    tags:
      - '[0-9].*'

jobs:
  do_release:
    name: Create release and build manylinux wheels
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out project
      uses: actions/checkout@v2
    
    - name: Get tag
      id: get_tag
      # strip 'refs/tags/' from ref, store in variable called VERSION
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Create Relese
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.VERSION }} # VERSION from get_tag step above
        release_name: v${{ steps.get_tag.outputs.VERSION }}
        draft: false
        prerelease: true

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install wheel setuptools_scm[toml]'>=3.4'
        python setup.py download

    - name: Build manylinux Python wheels
      id: build_wheels
      uses: RalfG/python-wheels-manylinux-build@v0.2.2-manylinux2010_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38'
        build-requirements: 'meson ninja'
        system-packages: 'zlib-devel'

    - name: Attach wheel and sdist assets to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir -p dist
        for audited in ./wheelhouse/*-manylinux*.whl; do
            cp $audited dist
        done
        set -x
        assets=()
        for asset in ./dist/*; do
          assets+=("-a" "$asset")
        done
        hub release edit "${assets[@]}" -m "${{ steps.get_tag.outputs.VERSION }}" "${{ steps.get_tag.outputs.VERSION }}"

  do_mac_wheels:
    needs: [do_release]
    name: Build Mac wheels
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - name: Check out project
      uses: actions/checkout@v2
    
    - name: Get tag
      id: get_tag
      # strip 'refs/tags/' from ref, store in variable called VERSION
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies, build wheels, and attach to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install wheel
        python setup.py download
        pip wheel . -w dist
        for asset in ./dist/*.whl; do
            assets+=("-a" "$asset")
        done
        hub release edit "${assets[@]}" -m "${{ steps.get_tag.outputs.VERSION }}" "${{ steps.get_tag.outputs.VERSION }}"

  do_pypi_publish:
    needs: [do_release, do_mac_wheels]  # wait for the other jobs to complete
    runs-on: ubuntu-latest  # pypa/gh-action-pypi-publish only runs on Linux...
    
    steps:
    - name: Check out project
      uses: actions/checkout@v2
    
    - name: Get tag
      id: get_tag
      # strip 'refs/tags/' from ref, store in variable called VERSION
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Build Python source tarball
      # do this here, because we can't use the GitHub .tar.gz (no PKG-INFO)
      # should go into 'dist' folder to be picked up when publishing to PyPI
      run: |
        pip install wheel setuptools_scm[toml]'>=3.4'
        python setup.py sdist

    - name: Download .whl assets from release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        hub release download "${{ steps.get_tag.outputs.VERSION }}"
        mkdir -p dist
        cp *.whl dist # move .whl files to dist for publishing
    
    - name: Publish wheels to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
